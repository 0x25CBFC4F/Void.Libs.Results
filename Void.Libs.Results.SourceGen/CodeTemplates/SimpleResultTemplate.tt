<#@ template #>
<#@ import namespace="Configuration" #>

#nullable enable

namespace <#= Settings.Namespace #>;

// Required usings
using System.CodeDom.Compiler;
using Void.Libs.Results;

/// <auto-generated>
/// Source file was generated by Void.Libs.Results.SourceGen at <#= DateTime.Now.ToString("f") #><br/>
/// Do not edit. Changes will be lost.
/// </auto-generated>
[GeneratedCode("Void.Libs.Results.SourceGen", null)]
public class <#= Settings.ClassName #>
{
    public bool Successful { get; set; }
    public List<ReportedMessage> Warnings { get; set; } = new();
    public List<ReportedMessage> Errors { get; set; } = new();

    public static <#= Settings.ClassName #> New => new();
    
    public <#= Settings.ClassName #> WithWarning(string message, string? causedBy = null)
    {
        Warnings.Add(new ReportedMessage(message, causedBy));
        return this;
    }
    
    public <#= Settings.ClassName #> WithWarning(ReportedMessage warning)
    {
        Warnings.Add(warning);
        return this;
    }
    
    public <#= Settings.ClassName #> WithError(string message, string? causedBy = null)
    {
        Errors.Add(new ReportedMessage(message, causedBy));
        return this;
    }

    public <#= Settings.ClassName #> WithError(ReportedMessage error)
    {
        Errors.Add(error);
        return this;
    }

    public <#= Settings.ClassName #> WithException(Exception ex, string? message)
    {
        Errors.Add(new ReportedMessage(message ?? ex.Message, null, ex));
        return this;
    }
}

<#
    if (Settings.IncludeDataVariant)
    {
#>
/// <auto-generated>
/// Source file was generated by Void.Libs.Results.SourceGen at <#= DateTime.Now.ToString("f") #><br/>
/// Do not edit. Changes will be lost.
/// </auto-generated>
[GeneratedCode("Void.Libs.Results.SourceGen", null)]
public class <#= Settings.ClassName #><TData> {
    public bool Successful { get; set; }
    public List<ReportedMessage> Warnings { get; set; } = new();
    public List<ReportedMessage> Errors { get; set; } = new();
    public TData? Data { get; set; }

    public static <#= Settings.ClassName #><TData> New => new();
    
    public <#= Settings.ClassName #><TData> WithData(TData data) {
        Data = data;
        return this;
    }

    public <#= Settings.ClassName #><TData> WithWarning(string message, string? causedBy = null)
    {
        Warnings.Add(new ReportedMessage(message, causedBy));
        return this;
    }
    
    public <#= Settings.ClassName #><TData> WithWarning(ReportedMessage warning)
    {
        Warnings.Add(warning);
        return this;
    }
    
    public <#= Settings.ClassName #><TData> WithError(string message, string? causedBy = null)
    {
        Errors.Add(new ReportedMessage(message, causedBy));
        return this;
    }

    public <#= Settings.ClassName #><TData> WithError(ReportedMessage error)
    {
        Errors.Add(error);
        return this;
    }

    public <#= Settings.ClassName #><TData> WithException(Exception ex, string? message)
    {
        Errors.Add(new ReportedMessage(message ?? ex.Message, null, ex));
        return this;
    }
}
<#
    }
#>

<#+
    public SimpleResultConfiguration Settings { get; set; }
#>
